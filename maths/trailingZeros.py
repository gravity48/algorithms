"""
Логика рассуждения

n! = 2^a * 3^b * 5^c, ...

Кол-во нулей будет возникать тогда когда 5 * 2
10 = min(a, c)

Хоть мы и должны отдельно отслеживать 2 и 5, но заметим что 5 составляет около 20%
поэтому будем отслеживать только их

В результате ноль добавляется к нашему факториалу только когда умножаем на 5

некоторые числа могут делиться на числа крайние 5 а значит нужно учесть и кратные 5 множители
"""


class Solution:
    def trailingZeroes(self, n: int) -> int:
        res = 0
        power5 = 5
        while n // power5:
            res += n // power5
            power5 *= 5
        return res